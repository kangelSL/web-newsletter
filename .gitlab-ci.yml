stages:
  - test

unit-test:
  image: node:latest
  stage: test
  before_script:
    - npm install
  script:
    - npm run test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xml
#
#
# image: node:lts

# stages:
#   - build
#   - test
#   - deploy review
#   - deploy staging
#   - deploy production

# cache:
#   key: ${CI_COMMIT_REF_SLUG}
#   paths:
#     - node_modules/

# variables:
#   STAGING_DOMAIN: newsletter-staging.surge.sh
#   PRODUCTION_DOMAIN: newsletter.surge.sh
# build website:
#   stage: build
#   only:
#     - main
#     - merge_requests
#   script:
#     - npm install
#     - npm install -g gatsby-cli
#     - gatsby build
#   artifacts:
#     paths:
#       - ./public

# test artifact:
#   image: alpine
#   stage: test
#   only:
#     - main
#     - merge_requests
#   script:
#     - grep -q "Gatsby" ./public/index.html

# test website:
#   stage: test
#   script:
#     - npm install
#     - npm install -g -gatsby-cli
#     - gatsby serve &
#     - sleep 5
#     - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

# deploy review:
#   stage: deploy review
#   only:
#     - merge_requests
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     url: http://staticwebs-$CI_ENVIRONMENT_SLUG.surge.sh
#     on_stop: stop review
#   script:
#     - npm install --global surge
#     - surge --project ./public --domain staticwebs-$CI_ENVIRONMENT_SLUG.surge.sh

# stop review:
#   stage: deploy review
#   only:
#     - merge_requests
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - npm install --global surge
#     - surge teardown staticwebs-$CI_ENVIRONMENT_SLUG.surge.sh
#     - echo "Remove review app"
#   when: manual
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop

# deploy staging:
#   stage: deploy staging
#   environment:
#     name: staging
#     url: http://$STAGING_DOMAIN
#   only:
#     - main
#   script:
#     - npm install --global surge
#     - surge --project ./public --domain $STAGING_DOMAIN

# deploy production:
#   stage: deploy production
#   environment:
#     name: production
#     url: http://$PRODUCTION_DOMAIN
#   only:
#     - main
#   when: manual
#   allow_failure: false
#   script:
#     - npm install --global surge
#     - surge --project ./public --domain $PRODUCTION_DOMAIN
